import { defineStore } from 'pinia';
import { ref } from 'vue';
import i18n from '../i18n.js'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π

export const useLanguageStore = defineStore('language', () => {
  const currentLanguage = ref('ru');

  const setLanguage = (lang) => {
    if (['ru', 'en', 'de'].includes(lang)) {
      currentLanguage.value = lang;
      // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Vue I18n v9, –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ .value
      i18n.global.locale.value = lang;
      try {
        localStorage.setItem('language', lang);
        console.log(`üåê –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${lang}`);
      } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —è–∑—ã–∫ –≤ localStorage:', e);
      }
    } else {
      console.warn(`–Ø–∑—ã–∫ ${lang} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è`);
    }
  };

  const initLanguage = () => {
    try {
      const savedLanguage = localStorage.getItem('language');
      if (savedLanguage && ['ru', 'en', 'de'].includes(savedLanguage)) {
        setLanguage(savedLanguage);
      }
    } catch (e) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —è–∑—ã–∫ –∏–∑ localStorage:', e);
    }
  };

  return { currentLanguage, setLanguage, initLanguage };
});
